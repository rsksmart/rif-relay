version: 2.1 # use CircleCI 2.0
parameters:
    repo:
        type: string
        default: 'rsksmart/rskj.git'
    version:
        type: string
        default: '3.3.0-SNAPSHOT'
    branch:
        type: string
        default: 'master'
    hardfork:
        type: string
        default: '-Dblockchain.config.hardforkActivationHeights.iris300=0'
commands:
    prepare:
        description: 'Prepare rif relay and rskj apps'
        steps:
            - checkout # special step to check out source code to working directory
            - run:
                  name: Avoid hosts unknown for github
                  command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

            - run:
                  name: Clone and Build RSKj
                  command: |
                      GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_fingerprint'
                      git clone -b << pipeline.parameters.branch >> git@github.com:<< pipeline.parameters.repo >>  ~/rsksmart/rskj
                      cd ~/rsksmart/rskj/
                      ./configure.sh
                      ./gradlew clean build -x test

            - restore_cache: # special step to restore the dependency cache
                  key: dependency-cachev6-{{ checksum "package.json" }}-npm
            - run:
                  name: Installing Rif Relay
                  command: npm install
            - save_cache: # special step to save the dependency cache
                  key: dependency-cachev6-{{ checksum "package.json" }}-npm
                  paths:
                      - ./node_modules
            - run:
                  name: Preparing Rif Relay
                  command: npm run prepare
    prepare_container:
        description: 'Preparing Rif Relay Container'
        steps:
            - checkout # special step to check out source code to working directory
            - restore_cache: # special step to restore the dependency cache
                  key: dependency-cachev6-{{ checksum "package.json" }}-npm
            - run:
                  name: Installing Rif Relay
                  command: npm install
    pre-checks:
        description: 'Execute build and code style checks'
        steps:
            - run:
                  name: Build
                  command: npm run build
            - run:
                  name: Linter
                  command: npm run lint
            - run:
                  name: Prettier
                  command: npm run prettier
jobs: # a collection of steps
    CodeStyle Checks: # Lint and other pre-checks thread
        working_directory: ~/gls # directory where steps will run
        docker: # run the steps with Docker
            - image: cimg/openjdk:8.0.292-node

        steps: # a collection of executable commands
            - prepare_container
            - pre-checks
    Test Thread 1: # Test thread
        working_directory: ~/gls # directory where steps will run
        docker: # run the steps with Docker
            - image: cimg/openjdk:8.0.292-node
        steps: # a collection of executable commands
            - prepare
            - run:
                  name: Tests Thread 1
                  command: |
                      RSKJ_HARD_FORK="<<pipeline.parameters.hardfork>>"
                      RSKJ_VERSION="<<pipeline.parameters.version>>"
                      source "scripts/utils.sh"
                      run_test_suite_on_ci $TEST_SUITE_1
            - store_artifacts:
                  path: ~/gls/logs
    Test Thread 2: # Test thread
        working_directory: ~/gls # directory where steps will run
        docker: # run the steps with Docker
            - image: cimg/openjdk:8.0.292-node
        steps: # a collection of executable commands
            - prepare
            - run:
                  name: Tests Thread 2
                  command: |
                      RSKJ_HARD_FORK="<<pipeline.parameters.hardfork>>"
                      RSKJ_VERSION="<<pipeline.parameters.version>>"
                      source "scripts/utils.sh"
                      run_test_suite_on_ci $TEST_SUITE_2
            - store_artifacts:
                  path: ~/gls/logs
    Test Thread 3: # Test thread
        working_directory: ~/gls # directory where steps will run
        docker: # run the steps with Docker
            - image: cimg/openjdk:8.0.292-node
        steps: # a collection of executable commands
            - prepare
            - run:
                  name: Tests Thread 3
                  command: |
                      RSKJ_HARD_FORK="<<pipeline.parameters.hardfork>>"
                      RSKJ_VERSION="<<pipeline.parameters.version>>"
                      source "scripts/utils.sh"
                      run_test_suite_on_ci $TEST_SUITE_3
            - store_artifacts:
                  path: ~/gls/logs
    Test Thread 4: # Test thread
        working_directory: ~/gls # directory where steps will run
        docker: # run the steps with Docker
            - image: cimg/openjdk:8.0.292-node
        steps: # a collection of executable commands
            - prepare
            - run:
                  name: Tests Thread 4
                  command: |
                      RSKJ_HARD_FORK="<<pipeline.parameters.hardfork>>"
                      RSKJ_VERSION="<<pipeline.parameters.version>>"
                      source "scripts/utils.sh"
                      run_test_suite_on_ci $TEST_SUITE_4
            - store_artifacts:
                  path: ~/gls/logs
    Test Thread 5: # Test thread
        working_directory: ~/gls # directory where steps will run
        docker: # run the steps with Docker
            - image: cimg/openjdk:8.0.292-node
        steps: # a collection of executable commands
            - prepare
            - run:
                  name: Tests Thread 5
                  command: |
                      RSKJ_HARD_FORK="<<pipeline.parameters.hardfork>>"
                      RSKJ_VERSION="<<pipeline.parameters.version>>"
                      source "scripts/utils.sh"
                      run_test_suite_on_ci $TEST_SUITE_5
            - store_artifacts:
                  path: ~/gls/logs
workflows:
    commit:
        jobs:
            - CodeStyle Checks
            - Test Thread 1
            - Test Thread 2
            - Test Thread 3
            - Test Thread 4
            - Test Thread 5