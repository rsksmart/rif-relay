version: 2.1
parameters:
    repo:
        type: string
        default: rsksmart/rskj
    tag:
        type: string
        default: IRIS-3

commands:
    prepare:
        description: Prepare enveloping and rskj apps
        steps:
            - checkout
            - setup_remote_docker
            - run:
                  name: Install Docker Compose
                  environment:
                      COMPOSE_VERSION: 1.29.2
                  command: |
                      curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
                      chmod +x ~/docker-compose
                      sudo mv ~/docker-compose /usr/local/bin/docker-compose

    prepare-container:
        description: 'Preparing Rif Relay Container'
        steps:
            - checkout # special step to check out source code to working directory
            - restore_cache: # special step to restore the dependency cache
                  key: dependency-cachev7-{{ checksum "package.json" }}-npm
            - run:
                  name: Installing Rif Relay
                  command: npm install

    pre-checks:
        description: 'Execute build and code style checks'
        steps:
            - run:
                  name: Build
                  command: npm run build
            - run:
                  name: Linter
                  command: npm run lint
            - run:
                  name: Prettier
                  command: npm run prettier

    run_rskj_node:
        description: Create network and Run RSKJ Container Image on Remote Docker
        steps:
            - prepare-container
            - run:
                  name: Run RSKJ Container Image
                  command: |
                      docker network create rif-relay-testing
                      docker create -v /cfg --name files node:14.15 /bin/true
                      docker cp $PWD files:/cfg
                      docker run --volumes-from files -d -p 4444:4444 -p 4445:4445 \
                          --network rif-relay-testing --name enveloping-rskj -it \
                          --entrypoint "" << pipeline.parameters.repo >>:<< pipeline.parameters.tag >>  java -cp rsk.jar \
                          -Dlogback.configurationFile=/cfg/project/docker/logback.xml \
                          -Drsk.conf.file=/cfg/project/docker/node.conf co.rsk.Start \
                          --regtest
                      docker run --rm --network rif-relay-testing jwilder/dockerize -wait tcp://enveloping-rskj:4444 -timeout 1m

    run_rskj_test:
        description: Execute the parameter test against RSKj node
        parameters:
            test:
                type: string
        steps:
            - run:
                  name: Execute Test Thread
                  command: |
                      source "scripts/utils.sh"
                      run_test_suite_on_ci_docker << parameters.test >>

jobs:
    CodeStyle Checks:
        docker:
            - image: 'cimg/node:16.15'
        steps:
            - prepare-container
            - pre-checks

    # Test_Thread_1:
    #     docker:
    #         - image: 'cimg/node:16.15'
    #     steps:
    #         - prepare
    #         - run_rskj_node
    #         - run_rskj_test:
    #               test: $TEST_SUITE_1

    Test Thread 2:
        docker:
            - image: 'cimg/node:16.15'
        steps:
            - prepare
            - run_rskj_node
            - run_rskj_test:
                  test: $TEST_SUITE_2

    Test Thread 3:
        docker:
            - image: 'cimg/node:16.15'
        steps:
            - prepare
            - run_rskj_node
            - run_rskj_test:
                  test: $TEST_SUITE_3

    Test Thread 4:
        docker:
            - image: 'cimg/node:16.15'
        steps:
            - prepare
            - run_rskj_node
            - run_rskj_test:
                  test: $TEST_SUITE_4

    Test Thread 5:
        docker:
            - image: 'cimg/node:16.15'
        steps:
            - prepare
            - run_rskj_node
            - run_rskj_test:
                  test: $TEST_SUITE_5

workflows:
    commit:
        jobs:
            - CodeStyle Checks
            # - Test Thread 2
            - Test Thread 3
            - Test Thread 4
            - Test Thread 5
