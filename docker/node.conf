peer {
    # Private key of the peer
    privateKey = "45c5b07fc1a6f58892615b7c31dca6c96db58c4bbc538a6b8a22999aaa860c32"
}

miner {
    client.enabled = true
    server.enabled = true
    client.autoMine = true
    # client.delayBetweenBlocks = 1 second
    coinbase.secret = "thisisasecret"
    minGasPrice = 1
}

# Disable account tx rate limit to avoid deploy errors
transaction.accountTxRateLimit.enabled = false

# structured trace is the trace being collected in the form of objects and exposed to the user in json or any other convenient form
vm {
    executionStackSize = 4M
    structured {
        trace = false
        traceOptions = 0
        dir = vmtrace
        compressed = true
        initStorageLimit = 10000
    }
}

rpc {
    providers : {
        web: {
            cors: "*",
            http: {
                enabled: true,
                bind_address = "0.0.0.0",
                hosts = ["rsk-node", "localhost", "127.0.0.1", "enveloping-rskj", "host.docker.internal"],
                port: 4444,
                }
            ws: {
                enabled: true,
                bind_address: "0.0.0.0",
                port: 4445,
            }
        }
    }

    modules = [
        {
            name: "eth",
            version: "1.0",
            enabled: "true",
        },
        {
            name: "net",
            version: "1.0",
            enabled: "true",
        },
        {
            name: "rpc",
            version: "1.0",
            enabled: "true",
        },
        {
            name: "web3",
            version: "1.0",
            enabled: "true",
        },
        {
            name: "evm",
            version: "1.0",
            enabled: "true"
        },
        {
            name: "sco",
            version: "1.0",
            enabled: "true",
        },
        {
            name: "txpool",
            version: "1.0",
            enabled: "true",
        },
        {
            name: "personal",
            version: "1.0",
            enabled: "true"
        },
        {
            name: "debug",
            version: "1.0",
            enabled: "true"
        },
        {
            name: "trace",
            version: "1.0",
            enabled: "true"
        },
         {
             name: "rsk",
            version: "1.0",
            enabled: "true"
         }
    ]
}
blockchain.gc = {
        enabled = false
        epochs = 3
        blocksPerEpoch = 20000
}
blockchain.config {
    name = "regtest"

        hardforkActivationHeights = {
        bahamas = 0,
        afterBridgeSync = -1,
        orchid = 0,
        orchid060 = 0,
        wasabi100 = 0,
        twoToThree = 0,
        papyrus200 = 0
    },
    consensusRules = {
        rskip97 = -1 # disable orchid difficulty drop
        rskip252 = -1 # disable [transaction gas price cap](https://github.com/rsksmart/RSKIPs/blob/master/IPs/RSKIP252.md)
    }
}

dump {
    # for testing purposes all the state will be dumped in JSON form to [dump.dir] if [dump.full] = true
    # possible values [true/false]
    full = false

    dir = dmp

    # This defines the vmtrace dump to the console and the style
    # -1 for no block trace
    block = -1

    # styles: [pretty/standard+] (default: standard+)
    style = pretty

    # clean the dump dir each start
    clean.on.restart = true
}

wallet {
    enabled = true
    accounts = [
        {
            "privateKey" : "7270725db1d109e19a174c4624a70b1a237708c5ccd7a0adc01625be5c460704"
        }
    ]
}

database {
    # Folder to save physical storage files
    # dir = ./rsknode/home
    # Every time the application starts the existing database will be destroyed and all the data will be downloaded from peers again
    # having this set on true does NOT mean that the block chain will start from the last point
    # [true/false]
    reset = true
}

cache {
  states {
    # During the processing of a Raul's fully filled blockchain, the cache
    # is generating the following hits per block (average)
    # uncommitedCacheHits = 1340
    # commitedCacheHits = 248
    # Processing 134 blocks grows the commitedCache to 100K entries, or approximately
    # or 25 Mbytes. A cache of about 100 Mbytes seems rasonable. Anyway, for
    # precaution we'll set the limit to 100K entries.
    max-elements: 100000
  },
  receipts {
    # each entry represents a transaction with one or more receipts
    # initial estimated capacity: 4000 transactions
    # ie 200 transactions in 20 blocks
    max-elements: 4000
  }
}

crypto {
    #Possibility to config crypto library implementation to use
    # Possible values:
    # - "bc" (Bouncy Castle)
    # - "native" (Native C lib)
    library: "bc"
}
